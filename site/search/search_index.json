{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Technical Writer Assignment","text":""},{"location":"#task-1-system-architecture-docs","title":"Task 1 (System Architecture Docs)","text":""},{"location":"#task-2-swagger-api-exercise","title":"Task 2 (Swagger API exercise)","text":""},{"location":"#task-3-english-text-rewriting-exercise","title":"Task 3 (English text rewriting exercise)","text":""},{"location":"task1/","title":"System Architecture Documentation","text":""},{"location":"task1/#introduction","title":"Introduction","text":"<p>At [CompanyName], we power a system designed to serve multiple partners (providers) under a unified platform. Each partner maintains its own user base, and our architecture enables them to individually configure user roles, permissions, and service plans to meet their unique business requirements. In addition to core multi-tenant design principles, our solution incorporates robust subscription management capabilities. Partners can create and manage subscription plans\u2014each with configurable parameters and user type mappings\u2014while users benefit from an enhanced experience through additional profile attributes (such as subscription status) and a clearly defined subscription lifecycle.</p>"},{"location":"task1/#who-should-read-this","title":"Who Should Read This?","text":"<p>This document is intended for:</p> <ul> <li>Backend Engineers \u2192 To understand multi-tenancy, user roles, access control, and the subscription management workflow.</li> <li>Product Managers \u2192 To gain clarity on how features (including subscription options) can be enabled or disabled per partner.</li> <li>Support &amp; Operations Teams \u2192 To diagnose issues related to user permissions, subscription statuses, and feature availability.</li> <li>API Developers &amp; Partners \u2192 To integrate effectively with our partner-specific subscription APIs and understand the underlying architecture.</li> </ul>"},{"location":"task1/#common-challenges-why-this-document-matters","title":"Common Challenges &amp; Why This Document Matters","text":"<p>In our fast-paced multi-tenant environment, teams sometimes encounter:</p> <ul> <li> <p>Role &amp; Permission Ambiguity:   Variations in subscription plans and role assignments across partners can lead to confusion.</p> </li> <li> <p>Complex Access Control and Subscription Logic:   The nuances of partner isolation and subscription state transitions aren\u2019t always clear, making troubleshooting more challenging.</p> </li> <li> <p>Onboarding and Debugging Delays:   Without centralized documentation, new engineers and support teams face delays in understanding system behavior and resolving issues.</p> </li> </ul> <p>This document consolidates our architecture knowledge\u2014covering user management, access control, session policies, and subscription management\u2014to streamline onboarding, enhance cross-team communication, and accelerate problem resolution.</p>"},{"location":"task1/#table-of-contents","title":"Table of Contents","text":""},{"location":"task1/#1-system-overview","title":"1. System Overview","text":"<ul> <li>System Components</li> <li>Partner Management Model</li> <li>User Management Model</li> </ul>"},{"location":"task1/#2-why-multi-tenancy","title":"2. Why Multi-Tenancy?","text":"<ul> <li>Understanding Multi-Tenant Architecture</li> </ul>"},{"location":"task1/#3-multi-tenancy-and-user-roles","title":"3. Multi-Tenancy and User Roles","text":"<ul> <li>Multi-Tenancy &amp; Data Isolation</li> <li>User Roles and Transitions</li> </ul>"},{"location":"task1/#4-session-management-and-limits","title":"4. Session Management and Limits","text":"<ul> <li>Session Management Policy</li> <li>Guest Session Management</li> <li>Basic Session Management</li> </ul>"},{"location":"task1/#5-subscription-management","title":"5. Subscription Management","text":"<ul> <li>Subscription Plans and User Types</li> <li>Plan Availability &amp; Partner Restrictions</li> <li>Subscription Lifecycle</li> </ul>"},{"location":"task1/#next-steps","title":"Next Steps","text":"<p>This document serves as an internal reference for understanding: - Architecture, session limits, and multi-tenancy constraints - Role-based access control (RBAC) and user transitions - Subscription management and enforcement per partner</p> <p>For detailed explanations, refer to the linked sections.</p>"},{"location":"task1/#license-and-ownership","title":"License and Ownership","text":"<p>\u00a9 {{ now().year }} CompanyName. Internal use only.</p>"},{"location":"task1/why_multi_tenancy/","title":"Understanding the Multi-Tenant Architecture","text":""},{"location":"task1/why_multi_tenancy/#the-need-for-multi-tenancy","title":"The Need for Multi-Tenancy","text":"<p>In a system where multiple partners (providers) manage their own users, multi-tenancy is the most efficient way to maintain strict data separation while ensuring scalability, configurability, and security. Instead of deploying separate infrastructures for each partner, multi-tenancy allows a shared yet isolated environment for all tenants.</p> <p>Key reasons for adopting multi-tenancy in this system include:</p>"},{"location":"task1/why_multi_tenancy/#1-strict-partner-data-user-isolation","title":"1. Strict Partner Data &amp; User Isolation","text":"<p>To ensure full separation between partners and their users, the system:</p> <ul> <li> <p>Keeps each partner\u2019s users and data completely isolated.</p> </li> <li> <p>Implements user segmentation to prevent cross-partner authentication.</p> </li> <li> <p>Prevents data leakage across different partners.</p> </li> <li> <p>Enforces Role-Based Access Control (RBAC) to apply partner-specific access policies.</p> </li> <li> <p>Ensures compliance with security and data protection policies.</p> </li> <li> <p>See: User Management Model.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#2-configurable-user-roles-feature-sets","title":"2. Configurable User Roles &amp; Feature Sets","text":"<p>To support the flexibility of different partners, the system:</p> <ul> <li> <p>Provides multiple user roles, including:</p> </li> <li> <p><code>guest</code>, <code>basic</code>, <code>advanced</code>, <code>company</code>, <code>admin</code>.</p> </li> <li> <p>Allows dynamic role configurations per partner.</p> </li> <li> <p>Enforces RBAC policies to manage granular access permissions.</p> </li> <li> <p>Supports feature toggles to let partners enable/disable specific functionalities.</p> </li> <li> <p>See: User Roles and Transitions.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#3-subscription-service-management","title":"3. Subscription &amp; Service Management","text":"<p>To ensure subscription services are adaptable to each partner's needs, the system:</p> <ul> <li> <p>Supports configurable subscription plans per partner, ensuring:</p> </li> <li> <p>Plan availability restrictions based on user roles.</p> </li> <li> <p>Subscription workflows (<code>signing \u2192 confirmed \u2192 suspended</code>).</p> </li> <li> <p>Applies multi-tenancy rules to subscription lifecycle management without disrupting other tenants.</p> </li> <li> <p>See: Subscription &amp; Service Plan Control.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#4-scalability-without-redundant-deployments","title":"4. Scalability Without Redundant Deployments","text":"<p>To maintain high availability and scalability, the system:</p> <ul> <li> <p>Allows rapid onboarding of new partners without separate deployments.</p> </li> <li> <p>Reduces infrastructure duplication by leveraging shared resources.</p> </li> <li> <p>Ensures global system updates without affecting partner-specific configurations.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#5-operational-cost-efficiency","title":"5. Operational &amp; Cost Efficiency","text":"<p>To optimize infrastructure and operational management, the system:</p> <ul> <li> <p>Reduces infrastructure costs, manual overhead, and redundant resource allocation.</p> </li> <li> <p>Centralizes monitoring, updates, and maintenance, reducing administrative effort.</p> </li> <li> <p>Implements rate limiting &amp; session control per tenant to prevent system abuse.</p> </li> <li> <p>See: Session Management Policy.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#6-security-authentication-compliance","title":"6. Security, Authentication &amp; Compliance","text":"<p>To ensure strong security and regulatory compliance, the system:</p> <ul> <li> <p>Enforces data segmentation across database, application, and API layers.</p> </li> <li> <p>Implements session management rules to prevent cross-tenant access issues.</p> </li> <li> <p>Uses RBAC enforcement to prevent unauthorized access across partners.</p> </li> <li> <p>Ensures compliance with GDPR, SOC 2, and other security regulations through strict audit policies.</p> </li> <li> <p>See: Partner-Specific Isolation.</p> </li> </ul>"},{"location":"task1/why_multi_tenancy/#challenges-of-multi-tenancy","title":"Challenges of Multi-Tenancy","text":"<p>While multi-tenancy offers significant advantages, it also introduces certain complexities:</p> Challenge Solution Data &amp; Access Control Complexity Ensuring no cross-tenant data access through RBAC &amp; data isolation policies. User Role Transitions Maintaining partner-specific role configurations while enforcing system-wide upgrade/downgrade rules. Subscription &amp; Session Limits Per Partner Ensuring subscription eligibility &amp; session management policies remain consistent. Resource Allocation &amp; Performance Preventing a single partner from overloading shared infrastructure. Feature Customization Balancing partner-specific feature toggles while rolling out global updates. <p>These challenges are mitigated through:</p> <p>\u2705 Strict RBAC policies </p> <p>\u2705 Isolated data partitions </p> <p>\u2705 Scalable authentication &amp; session handling strategies </p> <p>\u2705 Subscription-based access control policies </p>"},{"location":"task1/why_multi_tenancy/#conclusion","title":"Conclusion","text":"<p>Multi-tenancy allows the system to efficiently serve multiple partners while maintaining data isolation, security, and scalability. By leveraging shared infrastructure with configurable user roles, authentication policies, subscription management, and access controls, the system remains cost-effective, customizable, and future-proof.</p> <p>For implementation details, refer to:</p> <ul> <li> <p>Multi-Tenancy &amp; Data Isolation</p> </li> <li> <p>User Roles and Transitions</p> </li> <li> <p>User Management Model</p> </li> <li> <p>Plan Availability and Partner Restrictions</p> </li> </ul>"},{"location":"task1/architecture/partner_management/","title":"Partner Management Model","text":""},{"location":"task1/architecture/partner_management/#overview","title":"Overview","text":"<p>The Partner Management Model defines how different partners (providers) interact with the system while maintaining strict data isolation, configuration independence, and regulatory compliance. The architecture ensures that:</p> <ul> <li>Each partner has isolated user bases, preventing cross-tenant interactions.</li> <li>Feature sets, subscription plans, and access permissions are configurable per partner.</li> <li>Partners operate independently, ensuring no interference between providers.</li> <li>Data security and compliance standards are enforced across all partners.</li> </ul>"},{"location":"task1/architecture/partner_management/#key-components","title":"Key Components","text":""},{"location":"task1/architecture/partner_management/#1-partner-registry","title":"1. Partner Registry","text":"<ul> <li>Stores all registered partners with metadata, including:<ul> <li>Partner ID</li> <li>Business Name</li> <li>Onboarding Date</li> <li>Status (active, stopped)</li> </ul> </li> <li>Maintains partner lifecycle state, allowing updates or deactivation.</li> </ul>"},{"location":"task1/architecture/partner_management/#2-partner-configuration-manager","title":"2. Partner Configuration Manager","text":"<ul> <li>Controls feature toggles per partner.</li> <li>Defines available user roles, RBAC policies, and session limits.</li> <li>Configures subscription plans that a partner can offer to their users.</li> <li>Allows custom policy enforcement, such as rate-limiting or API access control.</li> </ul>"},{"location":"task1/architecture/partner_management/#feature-toggles-feature-flags","title":"Feature Toggles (Feature Flags)","text":"<p>Feature toggles (also known as feature flags) allow dynamic enabling or disabling of system functionalities per partner without modifying the core application logic. They are used for:</p> <ul> <li>Customizing feature availability per partner (e.g., enabling beta features for select partners).</li> <li>Rolling out new functionalities incrementally to prevent disruptions.</li> <li>Allowing partners to opt in or out of specific features based on their business needs.</li> </ul> <p>Feature toggles are stored in the Partner Configuration Manager and applied dynamically via RBAC and API Gateway rules.</p>"},{"location":"task1/architecture/partner_management/#example-use-case","title":"Example Use Case:","text":"<ul> <li>Partner A has Feature X enabled, while Partner B does not.</li> <li>Partner C gets access to an early release of Feature Y before a global rollout.</li> </ul> <p>Feature toggles provide flexibility, allowing partners to experiment with and control their system behavior without requiring new deployments.</p>"},{"location":"task1/architecture/partner_management/#3-user-segmentation-access-control","title":"3. User Segmentation &amp; Access Control","text":"<ul> <li>Ensures strict data and user isolation between partners.</li> <li>Restricts cross-partner interactions, preventing unauthorized access.</li> <li>Assigns partner-specific access rules for:<ul> <li>Role-Based Access Control (RBAC)</li> <li>Session &amp; Usage Policies</li> <li>Subscription Availability</li> </ul> </li> </ul>"},{"location":"task1/architecture/partner_management/#4-api-gateway-with-tenant-aware-routing","title":"4. API Gateway with Tenant-Aware Routing","text":"<ul> <li>Routes partner-specific requests to the appropriate services.</li> <li>Enforces partner-level authentication, including:<ul> <li>Basic Authentication for administrative endpoints.</li> <li>Token-based authentication for user-based requests.</li> </ul> </li> <li>Applies rate limits and security policies per partner.</li> </ul>"},{"location":"task1/architecture/partner_management/#5-subscription-service-plan-control","title":"5. Subscription &amp; Service Plan Control","text":"<ul> <li>Defines which subscription plans are available per partner.</li> <li>Manages plan restrictions for eligible user roles (<code>basic</code>, <code>company</code>, <code>advanced</code>).  <ul> <li>Guest users must first complete KYC to become eligible for subscription plans.  </li> </ul> </li> <li>Ensures real-time enforcement of subscription policies, including:  <ul> <li>Subscription initiation &amp; confirmation (<code>signing \u2192 confirmed</code>).  </li> <li>Suspension of subscriptions (e.g., due to non-payment or policy violations).  </li> </ul> </li> <li>Limits plan availability based on partner-specific configurations.</li> </ul>"},{"location":"task1/architecture/partner_management/#6-data-isolation-layer","title":"6. Data Isolation Layer","text":"<ul> <li>Implements logical or physical separation of partner data.</li> <li>Uses tenant-aware schemas or row-level security (RLS).</li> <li>Prevents cross-tenant access, ensuring strict data security.</li> </ul>"},{"location":"task1/architecture/partner_management/#partner-management-flow","title":"Partner Management Flow","text":"<p>Below is a diagram illustrating the Partner Management Model:</p> <p></p>"},{"location":"task1/architecture/partner_management/#summary","title":"Summary","text":"<p>The Partner Management Model ensures:</p> <p>\u2705 Strict isolation between partner users and configurations. \u2705 Customizable access control via RBAC, session policies, and API rules. \u2705 Subscription management per partner, enforcing role-based plan availability. \u2705 Scalable architecture, enabling independent partner operations. \u2705 Feature toggles allow partners to selectively enable or disable system functionalities without affecting global operations.</p> <p>For further details, see:</p> <ul> <li>User Roles and Transitions</li> <li>Subscription Plans &amp; Partner Restrictions</li> <li>Multi-Tenancy &amp; Data Isolation</li> </ul>"},{"location":"task1/architecture/system_components/","title":"System Components","text":"<p>The system consists of several key components that work together to provide multi-tenant functionality, user management, session control, and subscription handling. Below is an interaction flow illustrating how these components communicate.</p>"},{"location":"task1/architecture/system_components/#partner-management","title":"Partner Management","text":"<ul> <li>Manages the onboarding and configuration of partners (providers).  </li> <li>Stores partner-specific settings, such as available user roles, feature toggles, branding, operational limits, and subscription plan availability.  </li> <li>Ensures that each partner operates independently, without affecting other tenants.</li> </ul>"},{"location":"task1/architecture/system_components/#user-management","title":"User Management","text":"<ul> <li>Creates, updates, and maintains user records across multiple partners.  </li> <li>Controls user roles, statuses, and permissions based on partner-specific configurations.  </li> <li>Enforces RBAC (Role-Based Access Control) for feature access restrictions per role.  </li> <li>Manages user subscription status (e.g., <code>signing</code>, <code>confirmed</code>, <code>suspended</code>).  </li> <li>Works with the Subscription &amp; Plan Management service to synchronize user status with subscription states.  </li> </ul>"},{"location":"task1/architecture/system_components/#session-usage-policy-manager","title":"Session &amp; Usage Policy Manager","text":"<ul> <li>Monitors active user sessions and operational quotas (e.g., daily/weekly limits).  </li> <li>Enforces session expiration policies, including:  </li> <li>Guest session expiration (20-minute limit).  </li> <li>Basic user inactivity timeouts (partner-defined).  </li> <li>Restricted state handling for users exceeding operational limits.  </li> <li>Ensures Idle State and Restricted State enforcement per partner policies.</li> </ul>"},{"location":"task1/architecture/system_components/#subscription-plan-management","title":"Subscription &amp; Plan Management","text":"<ul> <li>Handles subscription lifecycle events, including:  </li> <li>Plan creation, updates, and deletions (API-controlled).  </li> <li>Subscription initiation &amp; confirmation (<code>signing \u2192 confirmed</code>).  </li> <li>Suspension of subscriptions (e.g., due to non-payment or policy enforcement).  </li> <li>Limits plan availability to specific user roles, as defined in partner policies.  </li> <li>Ensures subscription status transitions between <code>signing</code>, <code>confirmed</code>, and <code>suspended</code>.  </li> <li>Works with the User Management component to update user status based on subscription changes.</li> </ul>"},{"location":"task1/architecture/system_components/#kyc-verification-service","title":"KYC &amp; Verification Service","text":"<ul> <li>Provides identity verification for user upgrades from <code>guest</code> to <code>basic</code> or <code>advanced</code>.  </li> <li>Integrates with external and internal verification sources to comply with partner security requirements.  </li> <li>Enforces re-verification workflows (e.g., for expired KYC documents).</li> </ul>"},{"location":"task1/architecture/system_components/#data-storage-isolation-layer","title":"Data Storage &amp; Isolation Layer","text":"<ul> <li>Separates partner data using tenant-aware schemas and row-level security (RLS).  </li> <li>Ensures zero data leakage between different partners.  </li> <li>Supports multi-region data storage for compliance with local regulations.  </li> </ul>"},{"location":"task1/architecture/system_components/#logging-monitoring","title":"Logging &amp; Monitoring","text":"<ul> <li>Captures system events for auditing, debugging, and compliance.  </li> <li>Provides real-time visibility into usage patterns, errors, and security alerts.  </li> <li>Integrates with external SIEM solutions for advanced security monitoring.</li> </ul>"},{"location":"task1/architecture/system_components/#component-interaction-diagram","title":"Component Interaction Diagram","text":""},{"location":"task1/architecture/system_components/#summary","title":"Summary","text":"<p>The modular architecture ensures: \u2705 Strict tenant isolation for user and subscription data. \u2705 Granular access control via RBAC &amp; session enforcement. \u2705 Subscription plan customization per partner policies. \u2705 Efficient security monitoring through logging &amp; auditing.</p> <p>For further details, see:</p> <ul> <li>Partner Management Model</li> <li>User Roles and Transitions</li> <li>Subscription Lifecycle</li> </ul>"},{"location":"task1/architecture/user_management/","title":"User Management Model","text":""},{"location":"task1/architecture/user_management/#overview","title":"Overview","text":"<p>The User Management Model defines how users are created, managed, authenticated, and transitioned between roles and subscription states. Each partner (provider) maintains an isolated user base, ensuring:</p> <ul> <li>Strict user separation between partners.</li> <li>Role-Based Access Control (RBAC) configurable per partner.</li> <li>User lifecycle management, including status transitions and subscription states.</li> <li>Subscription control, enforcing plan availability restrictions per partner.</li> </ul>"},{"location":"task1/architecture/user_management/#key-user-attributes","title":"Key User Attributes","text":""},{"location":"task1/architecture/user_management/#1-user-identification","title":"1. User Identification","text":"<p>Each user is uniquely identified within the system by: - <code>user_id</code> \u2192 Unique identifier (7-character string). - <code>provider_id</code> \u2192 Identifies the partner the user belongs to (4-character string).</p>"},{"location":"task1/architecture/user_management/#2-user-roles","title":"2. User Roles","text":"<p>Users are assigned one of the following roles, which define their access level and available features:</p> Role Description <code>guest</code> Unverified user with limited access; cannot subscribe to plans. <code>basic</code> Verified user with access to certain plans. <code>advanced</code> Upgraded user with more subscription options. <code>company</code> Corporate-level user with full plan access. <code>admin</code> System administrator; cannot subscribe to plans. <p>Guest and Admin users cannot subscribe to plans.</p>"},{"location":"task1/architecture/user_management/#3-user-status-status","title":"3. User Status (<code>status</code>)","text":"<p>The <code>status</code> field defines a user\u2019s service state, affecting their ability to perform operations.</p> Status Description <code>active</code> User is active and can perform all allowed actions. <code>inactive</code> User is temporarily restricted from operations. <code>idle</code> User has exceeded usage limits or session timeouts. <code>signing</code> User is in the process of subscribing to a plan. <ul> <li>When a user initiates a subscription, their status changes to <code>signing</code>.</li> <li>Once confirmed, <code>status</code> returns to <code>active</code>.</li> </ul>"},{"location":"task1/architecture/user_management/#4-subscription-status-sub_status","title":"4. Subscription Status (<code>sub_status</code>)","text":"<p>The <code>sub_status</code> field tracks the user\u2019s subscription state. It is read-only and cannot be modified via API requests.</p> Sub-Status Description <code>signed</code> User has an active subscription. <code>unsigned</code> User does not have a subscription. <code>absent</code> Subscription information is not yet assigned (e.g., newly registered user). <ul> <li>Subscription confirmation updates <code>sub_status</code> to <code>signed</code>.</li> <li>Subscription cancellation resets <code>sub_status</code> to <code>unsigned</code>.</li> </ul>"},{"location":"task1/architecture/user_management/#user-lifecycle-role-transitions","title":"User Lifecycle &amp; Role Transitions","text":"<p>Users progress through different roles and subscription states based on verification, partner policies, and subscription changes.</p>"},{"location":"task1/architecture/user_management/#1-guest-to-basic-kyc-completion","title":"1. Guest to Basic (KYC Completion)","text":"<ul> <li>Guests must complete KYC verification to gain access to subscriptions.</li> <li>Transition: <code>guest</code> \u2192 <code>basic</code> (status: active, sub_status: unsigned)</li> </ul>"},{"location":"task1/architecture/user_management/#2-subscribing-to-a-plan","title":"2. Subscribing to a Plan","text":"<ul> <li>A Basic, Advanced, or Company user subscribes to a plan.</li> <li>Their status changes to <code>signing</code> while the subscription is being processed.</li> <li>Upon confirmation, status returns to <code>active</code>, and <code>sub_status</code> updates to <code>signed</code>.</li> </ul> <p>Transition Example: 1. Before Subscription \u2192 <code>basic</code>, <code>status: active</code>, <code>sub_status: unsigned</code> 2. During Subscription \u2192 <code>basic</code>, <code>status: signing</code>, <code>sub_status: unsigned</code> 3. After Confirmation \u2192 <code>basic</code>, <code>status: active</code>, <code>sub_status: signed</code></p>"},{"location":"task1/architecture/user_management/#3-canceling-a-subscription","title":"3. Canceling a Subscription","text":"<ul> <li>When a user cancels their subscription, <code>sub_status</code> changes to <code>unsigned</code>, but status remains <code>active</code>.</li> <li>If a partner discontinues a plan, affected users are forcefully transitioned to <code>unsigned</code>.</li> </ul>"},{"location":"task1/architecture/user_management/#4-subscription-suspension","title":"4. Subscription Suspension","text":"<ul> <li>If a payment issue or violation occurs, the user\u2019s subscription may be suspended.</li> <li>Suspended subscriptions can either be restored (<code>signed</code>) or removed (<code>unsigned</code>).</li> </ul> <p>Transition Example: 1. Active Subscription \u2192 <code>sub_status: signed</code> 2. Suspended (Issue Detected) \u2192 <code>sub_status: suspended</code> 3. Issue Resolved \u2192 <code>sub_status: signed</code> 4. Issue Unresolved (Final Termination) \u2192 <code>sub_status: unsigned</code></p>"},{"location":"task1/architecture/user_management/#user-management-flow","title":"User Management Flow","text":"<p>The following diagram illustrates the core user lifecycle:</p> <p></p>"},{"location":"task1/architecture/user_management/#authentication-session-control","title":"Authentication &amp; Session Control","text":"<p>The system authenticates users via session-based tokens and enforces: - Partner-defined session expiration policies. - Rate limits to prevent abuse. - Idle session handling (affects <code>status</code>, but not <code>sub_status</code>).</p> <p>Subscribing (<code>signing</code>) does not affect active sessions.</p>"},{"location":"task1/architecture/user_management/#summary","title":"Summary","text":"<ul> <li><code>status</code> controls service access, while <code>sub_status</code> tracks subscriptions.</li> <li>Users can only modify <code>status</code> through actions, while <code>sub_status</code> changes automatically.</li> <li>Guest and Admin users cannot subscribe.</li> <li>Subscription changes follow a structured lifecycle (<code>unsigned \u2192 signing \u2192 signed</code>).</li> </ul> <p>For related details, see: - User Roles &amp; Transitions - Subscription Lifecycle</p>"},{"location":"task1/security/multi_tenancy/","title":"Multi-Tenancy &amp; Data Isolation","text":""},{"location":"task1/security/multi_tenancy/#overview","title":"Overview","text":"<p>In a multi-tenant system, Partner-Specific Isolation is a critical security and architectural requirement. Each partner (provider) has its own isolated user base, configurations, and data, ensuring that:</p> <ul> <li> <p>Users from different partners never overlap.</p> </li> <li> <p>Each partner\u2019s access rules, feature sets, and user roles are independently configured.</p> </li> <li> <p>Data isolation is enforced at both the application and database levels.</p> </li> <li> <p>Security policies prevent unauthorized cross-tenant access.</p> </li> </ul> <p>Additionally, subscription plans are mapped per partner, meaning:</p> <ul> <li> <p>Each partner controls which subscription plans are available to its users.</p> </li> <li> <p>User role restrictions define eligibility for specific plans.</p> </li> <li> <p>A user\u2019s subscription status (<code>signing</code>, <code>confirmed</code>, <code>suspended</code>) is isolated within the partner context.</p> </li> </ul> <p>For details on subscription plan mapping, see Subscription &amp; Service Plan Control.</p>"},{"location":"task1/security/multi_tenancy/#key-principles-of-multi-tenant-isolation","title":"Key Principles of Multi-Tenant Isolation","text":""},{"location":"task1/security/multi_tenancy/#1-data-isolation","title":"1. Data Isolation","text":"<p>To prevent unintended access between tenants, the system enforces strict data segregation through:</p> <ul> <li> <p>Logical Database Separation \u2192 Each partner's data is tagged with a unique <code>partner_id</code>.</p> </li> <li> <p>Row-Level Security (RLS) \u2192 Queries automatically filter data based on the authenticated partner.</p> </li> <li> <p>Scoped API Requests \u2192 API responses are restricted to the requesting partner's context.</p> </li> <li> <p>Subscription Plan Data Segmentation \u2192 Users can only subscribe to plans within their assigned partner.</p> </li> </ul>"},{"location":"task1/security/multi_tenancy/#2-user-base-segmentation","title":"2. User Base Segmentation","text":"<p>To ensure that users remain within their designated tenant environments:</p> <ul> <li> <p>Each partner defines its own set of users, including authentication rules and role configurations.</p> </li> <li> <p>Users cannot see or interact with accounts from another partner.</p> </li> <li> <p>Guest users must complete KYC before they are eligible to access partner-defined subscription plans.</p> </li> <li> <p>The system prevents accidental cross-tenant access via strict Role-Based Access Control (RBAC).</p> </li> </ul> <p>For more details, see User Roles and Transitions.</p>"},{"location":"task1/security/multi_tenancy/#3-feature-access-configuration","title":"3. Feature &amp; Access Configuration","text":"<p>To provide partners with flexibility while maintaining isolation:</p> <ul> <li> <p>Partners can enable or disable specific system features for their users.</p> </li> <li> <p>Role-based access control (RBAC) enforces granular permissions per user, with role definitions configurable per partner.</p> </li> <li> <p>KYC verification is required for users transitioning from Guest to Basic. Additional role upgrades (Basic to Advanced, Advanced to Company) may be subject to partner-specific policies.</p> </li> <li> <p>Subscription access is restricted \u2192 Partners define:</p> </li> <li> <p>Which user roles can subscribe.</p> </li> <li> <p>The process flow (<code>signing</code> \u2192 <code>confirmed</code> \u2192 <code>suspended</code>).</p> </li> <li> <p>Feature toggles allow partners to dynamically enable or disable functionalities.</p> </li> </ul> <p>For more details, see User Roles and Transitions.</p>"},{"location":"task1/security/multi_tenancy/#4-api-gateway-authentication-isolation","title":"4. API Gateway &amp; Authentication Isolation","text":"<p>To enforce partner-level request isolation:</p> <ul> <li> <p>Requests must always include tenant identifiers to ensure proper routing.</p> </li> <li> <p>API calls enforce partner-specific authentication rules (e.g., OAuth2, JWT, API Keys).</p> </li> <li> <p>Tenants may use custom authentication providers, requiring dynamic validation.</p> </li> <li> <p>Subscription-related API requests must validate:</p> </li> <li> <p>User role eligibility for the requested plan.</p> </li> <li> <p>Partner\u2019s authorization policies before confirming a subscription.</p> </li> </ul> <p>For API structure details, refer to OpenAPI Specification.</p>"},{"location":"task1/security/multi_tenancy/#multi-tenant-isolation-flow","title":"Multi-Tenant Isolation Flow","text":"<p>The following diagram illustrates how multi-tenancy is enforced at various system levels.</p> <p></p>"},{"location":"task1/security/multi_tenancy/#data-isolation-mechanisms","title":"Data Isolation Mechanisms","text":"Isolation Layer Enforcement Mechanism Database Isolation Row-Level Security (RLS) &amp; Schema Separation User Segmentation Partner-Specific Authentication &amp; Role-Based Access Feature Control Per-Tenant Feature Flags &amp; Access Rules Session Management Tenant-Aware Session Tracking API Request Filtering Scoped API Responses Based on Tenant Context Subscription Restrictions Plan availability controlled per partner"},{"location":"task1/security/multi_tenancy/#summary","title":"Summary","text":"<p>Partner-Specific Isolation is a fundamental aspect of our multi-tenant system. By enforcing strict data separation, role-based access control, and tenant-aware API filtering, we ensure:</p> <ul> <li> <p>Security \u2192 No unauthorized cross-tenant access.</p> </li> <li> <p>Scalability \u2192 New partners onboard without affecting existing ones.</p> </li> <li> <p>Customization \u2192 Partners configure features, authentication, and user roles independently.</p> </li> <li> <p>Subscription Integrity \u2192 Users can only subscribe to plans within their partner\u2019s allowed scope.</p> </li> </ul>"},{"location":"task1/security/multi_tenancy/#for-more-details-see","title":"For More Details, See:","text":"<ul> <li> <p>User Roles and Transitions</p> </li> <li> <p>User Management Model</p> </li> <li> <p>Multi-Tenancy Overview</p> </li> <li> <p>Plan Availability and Partner Restrictions</p> </li> <li> <p>OpenAPI Specification</p> </li> </ul>"},{"location":"task1/security/rbac/","title":"User Roles and Transitions","text":""},{"location":"task1/security/rbac/#overview","title":"Overview","text":"<p>User roles define the access permissions, session policies, and transition rules for users across multiple partners. The system allows role-based access control (RBAC) while maintaining flexibility for partner-specific configurations.</p> <p>The User Roles and Transitions model ensures that:</p> <ul> <li>Users have the least privileges necessary for their role.</li> <li>Partners can customize role-based access within their environments.</li> <li>Dynamic role transitions allow users to upgrade or downgrade based on predefined conditions.</li> </ul>"},{"location":"task1/security/rbac/#key-user-roles","title":"Key User Roles","text":"<p>Each user is assigned a role that determines their permissions and operational limits.</p> Role Description Permissions &amp; Restrictions Guest Temporary user with limited access. - Session expiry: 20 min  - Daily limit: 5 operations  - Weekly limit: 20 operations  - Upgrade to Basic after KYC Basic Verified user after KYC approval. - Session expiry: On inactivity (partner-defined)  - Daily limit: 20 operations  - Weekly limit: 50 operations  - Eligible for Advanced upgrade Advanced Fully verified user with unrestricted access to system resources. - No session/operation limits - Access to features is determined by partner policies  - Eligible for Company upgrade Company Enterprise-level user with expanded permissions. - No session/operation limits  - Access to features is determined by partner policies  - Highest level of access allowed per partner configuration Admin System administrator. - Cannot subscribe to plans  - Manages system settings &amp; user permissions <p>Each partner can customize role configurations based on their specific business needs.</p>"},{"location":"task1/security/rbac/#permissions-and-access-control","title":"Permissions and Access Control","text":"<p>Permissions determine what actions a user can perform, classified into:</p> <ul> <li>General Access \u2013 Ability to log in, reset passwords, and access dashboards.</li> <li>Operational Controls \u2013 Execution of transactions, API calls, and system actions.</li> <li>Administrative Privileges \u2013 Managing users, adjusting configurations, and accessing reports.</li> </ul> <p>Permissions are partner-defined and enforced dynamically within the system.</p>"},{"location":"task1/security/rbac/#role-transition-model","title":"Role Transition Model","text":"<p>Users can move between roles based on verification, system limits, or administrative approvals.</p> <p></p>"},{"location":"task1/security/rbac/#role-transitions","title":"Role Transitions","text":"<ul> <li>Guest users must pass KYC verification to upgrade to Basic.</li> <li> <p>Basic users can upgrade to Advanced if allowed by partner policies.</p> </li> <li> <p>Partners may require Advanced KYC verification to ensure compliance.  </p> </li> <li>Some partners may offer subscription-based upgrades to unlock Advanced status.  </li> <li> <p>Certain partners may allow an automatic upgrade based on user activity or transaction volume.</p> </li> <li> <p>Advanced users can transition to Company status if they meet enterprise-level requirements.</p> </li> <li> <p>This may include business verification, corporate onboarding, or admin approval.</p> </li> </ul>"},{"location":"task1/security/rbac/#downgrade-criteria","title":"Downgrade Criteria","text":"<p>A user may be downgraded under the following conditions:</p> <ul> <li>Failure to Maintain Compliance \u2192 If a KYC or verification document expires or is revoked.</li> <li>Manual Downgrade \u2192 If an admin manually revokes access due to policy enforcement.</li> <li>Subscription Expiry (if applicable) \u2192 If a role is tied to subscription status and the user fails to renew.</li> <li>Partner-Defined Policies \u2192 Certain partners may implement additional downgrade conditions based on security or business needs.</li> </ul> <p>Inactivity does not trigger a downgrade but simply terminates sessions, requiring users to log in again.</p> <p>Each partner can define their own downgrade policies while maintaining global security and compliance standards.</p>"},{"location":"task1/security/rbac/#user-role-enforcement-in-the-multi-tenant-system","title":"User Role Enforcement in the Multi-Tenant System","text":"<p>RBAC is implemented at multiple levels to ensure security and isolation across partners.</p> Enforcement Layer Mechanism Application Layer Role-based UI rendering (users only see features they have access to) API Layer Role-scoped API permissions (users can only call endpoints they are authorized for) Database Layer Row-Level Security (RLS) (data access limited based on user role &amp; tenant ID) Session Layer Enforced session limits for Guest &amp; Basic users <p>All role-based controls are dynamically applied based on the user\u2019s session, role, and partner settings.</p>"},{"location":"task1/security/rbac/#example-role-based-access-policy-json","title":"Example Role-Based Access Policy (JSON)","text":"<p>Role-based access controls (RBAC) are managed by the Session &amp; Usage Policy Manager, ensuring enforcement of session limits, role transitions, and API access policies.</p> <pre><code>{\n  \"role\": \"basic\",\n  \"permissions\": {\n    \"view_dashboard\": true,\n    \"execute_transactions\": true,\n    \"manage_users\": false,\n    \"api_access_level\": \"limited\"\n  },\n  \"session_limits\": {\n    \"inactivity_timeout_min\": 30,\n    \"max_operations_per_day\": 20,\n    \"max_operations_per_week\": 50\n  }\n}\n</code></pre> <p>Each partner can override role-based rules to meet their security and operational requirements.</p>"},{"location":"task1/security/rbac/#summary","title":"Summary","text":"<p>The User Roles and Transitions model ensures that multi-tenant environments maintain structured access control while allowing customization per partner. By enforcing least privilege, dynamic role transitions, and session limits, the system:</p> <ul> <li>Prevents unauthorized access to sensitive features.</li> <li>Supports scalable multi-tenant role management.</li> <li>Allows role upgrades and downgrades based on compliance, policies, and user actions.</li> </ul>"},{"location":"task1/security/rbac/#related-sections","title":"Related Sections","text":"<ul> <li>User Role Transitions</li> <li>Partner-Specific Isolation</li> <li>User Management Model</li> </ul>"},{"location":"task1/sessions/basic_session_management/","title":"Basic Session Management","text":""},{"location":"task1/sessions/basic_session_management/#overview","title":"Overview","text":"<p>Basic users have more flexible session policies than Guest users because they have completed KYC verification. They also gain access to subscription plans, which may influence session management depending on partner policies.</p> <p>While operation limits remain system-wide, the restrictions for exceeding these limits are partner-defined.</p> <p>This section explains session expiration rules, operation limits, enforcement mechanisms, and subscription-related impacts for Basic users.</p>"},{"location":"task1/sessions/basic_session_management/#session-duration","title":"Session Duration","text":"<p>Unlike Guest users, Basic users do not have a fixed session expiration limit (e.g., 20 minutes per session). However:</p> <ul> <li>Sessions remain active until:</li> <li>The user logs out manually.</li> <li>An inactivity timeout occurs (configurable per partner).</li> <li>After X minutes/hours of inactivity, the session automatically expires for security reasons.</li> <li>Reauthentication is required after expiration.</li> </ul> <p>Additionally, some subscription plans may introduce different session policies, such as:</p> <ul> <li>Longer session durations for premium plans.</li> <li>Persistent sessions for enterprise accounts.</li> </ul> <p>This balances usability and security, allowing continuous sessions while protecting against unauthorized access.</p>"},{"location":"task1/sessions/basic_session_management/#operation-limits","title":"Operation Limits","text":"<p>Basic users have higher operation quotas than Guest users:</p> <ul> <li>Maximum 20 operations per day.</li> <li>Maximum 50 operations in a rolling 7-day period.</li> </ul> <p>These limits are system-wide and apply to all Basic users. However, each partner defines how exceeding these limits is handled.</p>"},{"location":"task1/sessions/basic_session_management/#subscription-plans-operation-limits","title":"Subscription Plans &amp; Operation Limits","text":"<ul> <li>Some subscription plans may modify operation limits for Basic users.</li> <li>Example: A Premium plan could allow higher daily/weekly operation quotas.</li> <li>Operation limits remain system-wide but adaptable through partner-defined policies.</li> </ul>"},{"location":"task1/sessions/basic_session_management/#enforcement-when-limits-are-exceeded-partner-defined","title":"Enforcement When Limits Are Exceeded (Partner-Defined)","text":"<p>If a Basic user exceeds operation limits, they are not automatically blocked like Guest users. Instead, partners define how enforcement is handled.</p>"},{"location":"task1/sessions/basic_session_management/#possible-enforcement-actions","title":"Possible Enforcement Actions","text":"<ul> <li>Warning notifications \u2192 The user is informed they are approaching/exceeding limits.</li> <li>Rate-limiting \u2192 Operations may be slowed down instead of blocked.</li> <li>Temporary feature restrictions \u2192 Certain actions may be disabled until limits reset.</li> <li>Manual review or admin intervention \u2192 Some partners may require approval to restore full access.</li> <li>Cooldown periods \u2192 The user may need to wait before regaining full access.</li> <li>Subscription-Dependent Actions \u2192 Some plans may offer priority access or grace periods.</li> </ul> <p>This flexibility ensures that partners can implement controls that fit their risk and business requirements.</p>"},{"location":"task1/sessions/basic_session_management/#subscription-session-impact","title":"Subscription &amp; Session Impact","text":"<p>A Basic user\u2019s subscription state may also affect their session and operation rules:</p> Subscription Status Impact on Session &amp; Operations Unsigned Standard Basic session rules apply. Signing Temporary restrictions may apply during subscription processing. Signed Partner/subscription plan may extend session duration or increase limits. <p>This ensures that users with active subscriptions may receive additional benefits, such as higher operation limits or longer session retention.</p>"},{"location":"task1/sessions/basic_session_management/#basic-session-flow-diagram","title":"Basic Session Flow Diagram","text":"<p>The following diagram illustrates how a Basic user session is managed:</p> <p></p>"},{"location":"task1/sessions/basic_session_management/#summary","title":"Summary","text":"<p>Basic session policies offer greater flexibility while ensuring system-wide operation limits remain in place.</p> Policy Restriction Session Expiration No fixed limit; expires on inactivity (partner-defined) Operation Limits 20 per day, 50 per week (system-wide) Exceeding Limits Consequence Partner-defined enforcement (warnings, rate-limiting, feature restrictions) Idle State Enforcement Not enforced Subscription Impact Some plans may extend session durations or modify operation limits <p>The partner-controlled enforcement mechanisms allow customization while maintaining system-wide consistency.</p> <p>For more details on user transitions, RBAC, and subscription management, see:</p> <ul> <li>User Roles &amp; Transitions</li> <li>Subscription Plans &amp; Partner Restrictions</li> <li>Subscription Lifecycle</li> </ul>"},{"location":"task1/sessions/basic_session_management/#license-and-ownership","title":"License and Ownership","text":"<p>\u00a9 2025 CompanyName. Internal use only.</p>"},{"location":"task1/sessions/guest_session_management/","title":"Guest Session Management","text":""},{"location":"task1/sessions/guest_session_management/#overview","title":"Overview","text":"<p>Guest users operate under strict, system-wide session policies to ensure security, prevent abuse, and encourage KYC verification. These restrictions apply uniformly across all partners and cannot be modified.</p> <p>The system enforces session duration limits, operation quotas, and idle state enforcement to:</p> <ul> <li>Prevent fraudulent or anonymous misuse of system resources.</li> <li>Encourage users to verify their identities through KYC.</li> <li>Ensure fair resource distribution among guest users.</li> </ul> <p>Because Guest users lack verified identities, these controls serve as protective measures for both the system and legitimate users.</p>"},{"location":"task1/sessions/guest_session_management/#session-duration-limit","title":"Session Duration Limit","text":"<ul> <li>Each session for a Guest user is limited to 20 minutes.</li> <li>After 20 minutes, the session automatically expires, requiring the user to log in again.</li> <li>Sessions do not accumulate\u2014users can start new sessions but must re-authenticate each time.</li> <li>This prevents unverified users from maintaining persistent access, ensuring that periodic re-authentication is enforced.</li> </ul>"},{"location":"task1/sessions/guest_session_management/#operation-quotas","title":"Operation Quotas","text":"<p>Guest users are also subject to strict operation quotas:</p> <ul> <li>Maximum 5 operations per day.</li> <li>Maximum 20 operations in a rolling 7-day period.</li> <li>Operations include API requests, transactions, and key system interactions.</li> </ul> <p>If a Guest user exceeds any of these quotas, they immediately transition into Idle State.</p>"},{"location":"task1/sessions/guest_session_management/#idle-state-enforcement","title":"Idle State Enforcement","text":"<p>Idle State is a strict system-wide restriction applied when a Guest user exceeds session or operation quotas. This means:</p> <ul> <li>The user is immediately blocked from performing further actions until the next reset period.</li> <li>They are prompted to complete KYC verification to upgrade to Basic and regain full access.</li> <li>Idle State cannot be bypassed unless the user either waits for the reset period or upgrades to Basic.</li> </ul>"},{"location":"task1/sessions/guest_session_management/#guest-session-flow-diagram","title":"Guest Session Flow Diagram","text":"<p>The following diagram illustrates the lifecycle of a Guest session:</p> <p></p>"},{"location":"task1/sessions/guest_session_management/#enforcing-kyc-completion","title":"Enforcing KYC Completion","text":"<p>The Guest session model is intentionally restrictive to drive users toward KYC verification:</p> <ul> <li>Frequent session expirations encourage users to verify their identity and upgrade to Basic status.</li> <li>Operation quotas prevent Guest users from overusing the system while allowing limited interaction.</li> <li>Idle state enforces a strong conversion incentive\u2014users must either wait for quotas to reset or complete KYC to continue.</li> </ul> <p>By applying these policies, the system ensures that Guest users do not remain unverified indefinitely.</p>"},{"location":"task1/sessions/guest_session_management/#summary","title":"Summary","text":"<p>Guest session policies are strictly enforced across all partners to maintain security, system integrity, and encourage KYC adoption.</p> Policy Restriction Session Expiration 20 min per session Operation Quotas 5 per day, 20 per week Exceeding Quotas Consequence Immediate Idle State (No further actions allowed) Escape from Idle State Wait for reset OR Complete KYC <p>For more details on user transitions, see:</p> <ul> <li>User Roles and Transitions</li> </ul>"},{"location":"task1/sessions/session_management_policy/","title":"Session Management Policy","text":""},{"location":"task1/sessions/session_management_policy/#overview","title":"Overview","text":"<p>Session management policies define how the system controls user sessions, operation limits, and enforcement mechanisms. These policies are essential for:</p> <ul> <li>Security &amp; fraud prevention \u2192 Protecting the system from abuse.</li> <li>Resource management \u2192 Ensuring fair usage across all users.</li> <li>User experience \u2192 Encouraging users to complete verification for a better experience.</li> </ul> <p>The session management approach differs by user role:</p> <ul> <li>Guest users \u2192 Subject to strict, system-wide restrictions to prevent abuse and drive KYC verification.</li> <li>Basic users \u2192 Have more flexible, partner-defined restrictions, as they are KYC-verified and lower risk.</li> </ul> <p>This section explains why these differences exist and the rationale behind enforcement mechanisms.</p>"},{"location":"task1/sessions/session_management_policy/#why-guest-users-have-stricter-system-wide-restrictions","title":"Why Guest Users Have Stricter System-Wide Restrictions","text":"<p>Guest users are unverified and potentially anonymous, which presents higher security risks, such as:</p> <ul> <li>Fraud &amp; abuse prevention \u2192 Limits prevent spam account creation and system exploitation.</li> <li>Encouraging KYC verification \u2192 Strong restrictions incentivize users to upgrade to Basic status.</li> <li>Resource protection \u2192 Restricting session length and operation count prevents excessive system load.</li> <li>Universal enforcement across all partners \u2192 Ensuring consistent security measures for all Guest users.</li> </ul>"},{"location":"task1/sessions/session_management_policy/#system-wide-controls-for-guest-users","title":"System-Wide Controls for Guest Users","text":"<p>To address these risks, the system applies strict, non-configurable policies to all Guest users:</p> <ul> <li>Short session duration \u2192 Sessions expire after 20 minutes.</li> <li>Limited operations per day and per week \u2192 5 daily, 20 weekly.</li> <li>Automatic transition to Idle State when limits are exceeded.</li> </ul> <p>Guest session policies are fixed across all partners and cannot be customized.</p>"},{"location":"task1/sessions/session_management_policy/#why-basic-users-have-more-relaxed-partner-defined-restrictions","title":"Why Basic Users Have More Relaxed, Partner-Defined Restrictions","text":"<p>Once a user completes KYC verification, they upgrade to Basic status, which lowers their risk profile. Basic users:</p> <ul> <li>Have verified identities \u2192 Reducing risks of fraudulent or anonymous activity.</li> <li>Are more engaged with the platform \u2192 Likely to be legitimate, returning users.</li> <li>May have different needs depending on the partner \u2192 Some partners prefer more flexibility in how restrictions apply.</li> </ul>"},{"location":"task1/sessions/session_management_policy/#partner-defined-controls-for-basic-users","title":"Partner-Defined Controls for Basic Users","text":"<p>Because Basic users are verified, the system allows partners to define enforcement mechanisms when limits are exceeded. These may include:</p> <ul> <li>Session expiration based on inactivity \u2192 Instead of a fixed 20-minute session, Basic users remain logged in until they are inactive beyond a partner-defined timeout.</li> <li>Higher operation limits \u2192 Partners can allow Basic users 20 daily operations, 50 weekly.</li> <li>Warnings and soft enforcement \u2192 When a Basic user exceeds limits:</li> <li>The system does not immediately block access.</li> <li>The user receives a warning notification.</li> <li>Some partners may apply rate-limiting, temporary restrictions, or manual review requirements before restoring access.</li> <li>If excessive usage persists, further action may be taken based on the partner's policies.</li> </ul> <p>This balances security with usability, allowing partners to control their own risk management strategies while maintaining system-wide integrity.</p>"},{"location":"task1/sessions/session_management_policy/#summary","title":"Summary","text":"<p>The difference in session management between Guest and Basic users is based on:</p> Factor Guest Users (System-Wide) Basic Users (Partner-Defined) Session Expiration 20 min per session Expires on inactivity (partner-defined) Operation Limits 5 per day, 20 per week 20 per day, 50 per week Exceeding Limits Consequence Idle State (No access until reset) Warning or limited enforcement (Partner-defined policies apply) Customization Fixed across all partners Partners control restrictions <p>The system's session management policies are designed to:</p> <p>\u2705 Maintain security for unverified users while allowing verified users more flexibility. \u2705 Encourage user conversion by nudging Guest users toward KYC completion. \u2705 Give partners control over restrictions applied to their verified users. \u2705 Ensure consistency by keeping Guest restrictions global and Basic restrictions partner-specific.  </p>"},{"location":"task1/sessions/session_management_policy/#next-steps","title":"Next Steps","text":"<p>The following sections provide more details on how these policies are enforced:</p> <ul> <li>Guest Session Management </li> <li>Basic Session Management </li> </ul>"},{"location":"task1/subscriptions/plan_restrictions/","title":"Plan Availability &amp; Partner Restrictions","text":""},{"location":"task1/subscriptions/plan_restrictions/#overview","title":"Overview","text":"<p>Subscription plans are configured per partner, ensuring that only eligible users can access them. Each partner can create, modify, and restrict plans based on user roles and internal policies. </p> <p>The system enforces plan availability rules through partner-defined mappings, ensuring that:</p> <ul> <li>Not all plans are available to every user\u2014eligibility depends on user role.</li> <li>Plans are tied to specific partners\u2014a plan created by one partner is not accessible to another.</li> <li>Users can subscribe to only one plan at a time.</li> <li>Subscription status transitions follow a structured model (<code>signing \u2192 signed \u2192 suspended</code>).</li> </ul> <p>This document explains how plan restrictions are enforced and the rules governing their availability.</p>"},{"location":"task1/subscriptions/plan_restrictions/#plan-availability-by-user-role","title":"Plan Availability by User Role","text":"<p>Each subscription plan is mapped to specific user roles (<code>basic</code>, <code>advanced</code>, <code>company</code>). The Guest and Admin roles cannot subscribe to any plans.</p> User Role Subscription Eligibility Notes Guest \u274c Not eligible Must complete KYC verification to access plans. Basic \u2705 Eligible for certain plans Can only subscribe to plans mapped to <code>basic</code>. Advanced \u2705 Eligible for more plans Can access plans for <code>basic</code> and <code>advanced</code> users. Company \u2705 Full access Can access all plans, including enterprise-level offerings. Admin \u274c Not eligible Admins manage plans but cannot subscribe. <ul> <li>Partners can create plans that target multiple user roles.</li> <li>If a Basic user upgrades to Advanced, they may gain access to new plans.</li> <li>If a user downgrades back to Basic, they may lose access to previously available plans.</li> </ul>"},{"location":"task1/subscriptions/plan_restrictions/#partner-specific-plan-restrictions","title":"Partner-Specific Plan Restrictions","text":"<p>Each partner manages their own set of subscription plans. The system prevents cross-partner access by enforcing strict mapping rules:</p> <ul> <li>Each plan belongs to a single partner.</li> <li>Users can only subscribe to plans offered by their assigned partner.</li> <li>Partners control pricing, features, and subscription conditions for their plans.</li> <li>Subscription status follows a structured lifecycle (<code>signing \u2192 signed \u2192 suspended</code>).</li> </ul>"},{"location":"task1/subscriptions/plan_restrictions/#example-cross-partner-plan-isolation","title":"Example: Cross-Partner Plan Isolation","text":"<ul> <li>Partner A offers a plan \"Pro Access\" \u2192 Only available to Partner A's users.</li> <li>Partner B offers \"Enterprise Suite\" \u2192 Cannot be accessed by Partner A's users.</li> </ul> <p>This ensures that each partner retains full control over their pricing, business logic, and feature access.</p>"},{"location":"task1/subscriptions/plan_restrictions/#subscription-constraints-enforcement","title":"Subscription Constraints &amp; Enforcement","text":"<p>The system enforces the following hard limits on subscriptions:</p> <ul> <li>Users can only subscribe to one plan at a time.</li> <li>Switching plans requires unsubscribing first (unless explicitly allowed by partner policies).</li> <li>Subscription plans cannot be transferred between partners.</li> <li>Partners can modify or remove plans, affecting currently subscribed users.</li> </ul> <p>If a plan is discontinued, users may be forcibly unsubscribed, transitioning them to an \"unsigned\" status.</p>"},{"location":"task1/subscriptions/plan_restrictions/#subscription-flow-diagram","title":"Subscription Flow Diagram","text":"<p>The following diagram illustrates how users interact with subscription plans and the restrictions enforced:</p> <p></p>"},{"location":"task1/subscriptions/plan_restrictions/#summary","title":"Summary","text":"<ul> <li>Subscription plans are assigned to specific partners and user roles.</li> <li>Guest and Admin users cannot subscribe\u2014only Basic, Advanced, and Company users are eligible.</li> <li>Each partner fully controls their subscription plans\u2014including pricing, access rules, and feature sets.</li> <li>Users can only have one active subscription at a time.</li> <li>Switching plans or modifying existing plans requires partner-defined policies.</li> <li>Subscription transitions follow the <code>signing \u2192 signed \u2192 suspended</code> lifecycle.</li> </ul> <p>For more details, see:</p> <ul> <li>Subscription Plans and User Types</li> <li>Subscription Lifecycle</li> </ul>"},{"location":"task1/subscriptions/subscription_lifecycle/","title":"Subscription Lifecycle","text":""},{"location":"task1/subscriptions/subscription_lifecycle/#overview","title":"Overview","text":"<p>The Subscription Lifecycle defines how users subscribe to, modify, and cancel subscription plans. Each partner can configure plan availability, transition rules, and enforcement policies, but the core lifecycle states are system-wide and consistent.</p> <p>Subscription plans directly impact user role eligibility and available features. When a user subscribes, upgrades, or cancels, their subscription status changes accordingly.</p>"},{"location":"task1/subscriptions/subscription_lifecycle/#subscription-states","title":"Subscription States","text":"<p>Each subscription follows a state-driven process, ensuring proper validation and enforcement. The possible states are:</p> State Description <code>unsigned</code> The user has no active subscription. <code>signing</code> The user has initiated a subscription but is awaiting confirmation. <code>signed</code> The subscription is active, and the user has full access to the plan's features. <code>suspended</code> The subscription is temporarily inactive due to payment issues, policy violations, or admin actions. <ul> <li>All Basic, Advanced, and Company users start in the <code>unsigned</code> state unless they already have an active subscription.</li> <li>Guest users are not eligible for subscriptions until they complete KYC and upgrade to Basic.</li> <li>Once a user subscribes, they enter the <code>signing</code> state.</li> <li>If confirmation succeeds, the subscription transitions to <code>signed</code>.</li> <li>If issues arise (e.g., payment failure, fraud detection, or admin suspension), the subscription may enter <code>suspended</code>.</li> </ul>"},{"location":"task1/subscriptions/subscription_lifecycle/#subscription-flow","title":"Subscription Flow","text":"<p>The diagram below illustrates how users transition between subscription states.</p> <p></p>"},{"location":"task1/subscriptions/subscription_lifecycle/#subscription-confirmation-signing-signed","title":"Subscription Confirmation (<code>signing \u2192 signed</code>)","text":"<p>When a user subscribes to a plan, they transition to <code>signing</code> until the subscription is validated and confirmed. </p> <ul> <li>The confirmation process may include:</li> <li>Payment verification (if required by the partner).</li> <li>Manual approval or automated processing.</li> <li>Fraud prevention checks.</li> <li>If successful, the user transitions to <code>signed</code>.</li> <li>If rejected, the user returns to <code>unsigned</code>.</li> </ul> <p>Note: Partners may define additional conditions before a subscription is confirmed.</p>"},{"location":"task1/subscriptions/subscription_lifecycle/#subscription-suspension-signed-suspended","title":"Subscription Suspension (<code>signed \u2192 suspended</code>)","text":"<p>A subscription may enter the <code>suspended</code> state if any of the following occur:</p> <ul> <li>Payment failure (for paid plans).</li> <li>Policy violations (fraud detection, abuse, etc.).</li> <li>Manual suspension by an admin.</li> <li>Partner-defined restrictions (e.g., exceeding plan limits).</li> </ul> <p>While suspended, the user loses access to subscription-based features until the issue is resolved.</p>"},{"location":"task1/subscriptions/subscription_lifecycle/#restoring-a-suspended-subscription-suspended-signed","title":"Restoring a Suspended Subscription (<code>suspended \u2192 signed</code>)","text":"<ul> <li>If the issue is resolved (e.g., payment is completed), the subscription returns to <code>signed</code>.</li> <li>If not resolved within a partner-defined period, the subscription transitions to <code>unsigned</code>.</li> </ul>"},{"location":"task1/subscriptions/subscription_lifecycle/#subscription-cancellation-signed-unsigned","title":"Subscription Cancellation (<code>signed \u2192 unsigned</code>)","text":"<p>A user may cancel their subscription, resulting in a transition to <code>unsigned</code>.</p> <ul> <li>For immediate cancellations, access is revoked instantly.</li> <li>For scheduled cancellations, the user retains access until the end of the billing period.</li> <li>If a user downgrades to a role that does not support the plan, their subscription is also canceled.</li> </ul>"},{"location":"task1/subscriptions/subscription_lifecycle/#downgrades-subscription-impact","title":"Downgrades &amp; Subscription Impact","text":"<p>Subscription plans are mapped to user roles. When a user changes roles, their subscription status may be affected:</p> Role Change Subscription Impact Basic \u2192 Advanced May gain access to additional plans. Advanced \u2192 Basic May lose access to previously available plans. Downgrade to Guest/Admin Subscription is canceled (forced transition to <code>unsigned</code>)."},{"location":"task1/subscriptions/subscription_lifecycle/#summary","title":"Summary","text":"<p>The Subscription Lifecycle ensures a structured, enforceable process for managing user subscriptions. </p> <ul> <li>Users transition between <code>unsigned</code>, <code>signing</code>, <code>signed</code>, and <code>suspended</code> states.</li> <li>Subscription confirmation requires validation (e.g., payment processing, approval).</li> <li>Suspensions occur due to payment failures, policy violations, or manual admin actions.</li> <li>Cancellations return the user to <code>unsigned</code>.</li> <li>Role changes can affect subscription eligibility.</li> </ul> <p>For more details on subscription availability, see:</p> <ul> <li>Plan Availability &amp; Partner Restrictions</li> </ul>"},{"location":"task1/subscriptions/subscription_plans/","title":"Subscription Plans and User Types","text":""},{"location":"task1/subscriptions/subscription_plans/#overview","title":"Overview","text":"<p>The system supports subscription-based service plans, allowing users to access specific features based on their role and partner-defined policies. Subscription plans are configurable per partner, ensuring that:</p> <ul> <li>Users can subscribe to only one plan at a time (or remain unsubscribed).</li> <li>Each partner manages their own set of subscription plans, defining availability and access restrictions.</li> <li>Plans are mapped to specific user roles, restricting eligibility.</li> <li>Subscriptions follow a structured lifecycle, transitioning between <code>signing</code>, <code>signed</code>, and <code>suspended</code> statuses.</li> </ul> <p>This section explains how subscription plans are created, managed, and enforced within the system.</p>"},{"location":"task1/subscriptions/subscription_plans/#subscription-plan-structure","title":"Subscription Plan Structure","text":"<p>Each subscription plan has the following attributes:</p> Attribute Description Plan ID Unique identifier for the subscription plan. Name Human-readable name of the plan (e.g., \"Premium\", \"Business\"). Available For User roles eligible for this plan (<code>basic</code>, <code>company</code>, <code>advanced</code>). Partner-Specific Subscription plans are only available within the partner that created them. Plan Status Indicates if the plan is <code>active</code> or <code>inactive</code>. <p>Guest and Admin users cannot subscribe to plans. Guest users must first complete KYC verification to become eligible.</p>"},{"location":"task1/subscriptions/subscription_plans/#subscription-lifecycle","title":"Subscription Lifecycle","text":"<p>A user\u2019s subscription follows a structured status model:</p> Status Description Signing The user has initiated a subscription request. Signed The subscription is active and fully functional. Suspended The subscription is temporarily disabled by the partner. <ul> <li>New subscriptions begin in the <code>signing</code> state until they are confirmed as <code>signed</code>.</li> <li>Partners may suspend subscriptions, temporarily restricting access without removing the user from the plan.</li> <li>Users can only switch plans after unsubscribing from their current plan.</li> </ul>"},{"location":"task1/subscriptions/subscription_plans/#partner-controlled-subscription-management","title":"Partner-Controlled Subscription Management","text":"<p>Partners have full control over how subscriptions are managed, including:</p>"},{"location":"task1/subscriptions/subscription_plans/#1-subscription-plan-availability","title":"1. Subscription Plan Availability","text":"<ul> <li>Partners define which plans are available for each user role.</li> <li>Users can only subscribe to plans mapped to their role.</li> <li>Subscription plans cannot be shared between partners.</li> </ul>"},{"location":"task1/subscriptions/subscription_plans/#2-plan-modification-and-deletion","title":"2. Plan Modification and Deletion","text":"<ul> <li>Partners can create, update, or delete subscription plans.</li> <li>Plan modifications do not affect active subscriptions unless explicitly enforced.</li> </ul>"},{"location":"task1/subscriptions/subscription_plans/#3-enforcing-subscription-policies","title":"3. Enforcing Subscription Policies","text":"<ul> <li>Partners define custom restrictions on subscription upgrades, downgrades, and renewals.</li> <li>Subscription changes may require manual approval or automatic validation.</li> </ul>"},{"location":"task1/subscriptions/subscription_plans/#subscription-plan-api-integration","title":"Subscription Plan API Integration","text":"<p>Partners interact with subscription plans via the Subscription API. The key endpoints include:</p> Method Endpoint Description GET <code>/api/subscriptions/plans</code> Retrieve available plans for a partner. POST <code>/api/subscriptions/plans</code> Create a new subscription plan (requires Basic Auth). PUT <code>/api/subscriptions/plans/{plan_id}</code> Update an existing plan (requires Basic Auth). DELETE <code>/api/subscriptions/plans/{plan_id}</code> Remove a subscription plan (requires Basic Auth). POST <code>/api/subscriptions/{user_id}/subscribe/{plan_id}</code> Subscribe a user to a plan, transitioning them to <code>signing</code>. POST <code>/api/subscriptions/{user_id}/confirm/{plan_id}</code> Confirm a user\u2019s subscription, changing <code>signing \u2192 signed</code>. POST <code>/api/subscriptions/{user_id}/unsubscribe</code> Cancel a subscription, transitioning the user to <code>unsigned</code>. <p>For full API details, see Subscription API Specification.</p>"},{"location":"task1/subscriptions/subscription_plans/#subscription-flow-diagram","title":"Subscription Flow Diagram","text":"<p>The following diagram illustrates the subscription lifecycle and how users interact with subscription plans:</p> <p></p>"},{"location":"task1/subscriptions/subscription_plans/#summary","title":"Summary","text":"<p>Subscription plans provide a structured, partner-managed way for users to access premium features. The system ensures that:</p> <ul> <li>Users can only have one active subscription at a time.</li> <li>Plans are available based on role eligibility.</li> <li>Guest and Admin users cannot subscribe to plans.</li> <li>Partners manage subscription creation, modification, and enforcement.</li> <li>Subscription transitions follow the <code>signing \u2192 signed \u2192 suspended</code> lifecycle.</li> </ul> <p>For implementation details, see:</p> <ul> <li>Subscription API</li> <li>User Role Transitions</li> <li>Partner Management Model</li> </ul>"},{"location":"task2/","title":"OpenAPI Specification","text":"<p>This page renders the OpenAPI specification using Swagger UI.</p>"},{"location":"task2/#openapi-definition","title":"OpenAPI Definition","text":""},{"location":"task3/","title":"Task 3. Text Editing Exercise","text":"Original Edited (Partner-Focused) Explanation (Grammar &amp; Style Errors in Original) Edited (User-Focused) Explanation (User-Friendly Adjustments) Plans provide product clients with a variety of service options defined within a preconfigured score. Subscription plans provide users with a range of service options, each configured with specific parameters. \"Product clients\" is unclear and unnatural; \"users\" is more appropriate. \"Preconfigured score\" is vague and confusing; \"configured with specific parameters\" makes the meaning clearer. Discover a variety of subscription plans designed just for you \u2013 each plan comes with its own set of features. Uses \"discover\" to engage the user. Simplifies technical phrasing into a friendlier, more inviting message. Please note that shortly after the feature implementation, your customer service flow and solutions may undergo some alignment due to an extensive system update. Following our latest system update, user records have been enhanced with additional attributes, as detailed in our updated API documentation. These changes may require adjustments to customer support workflows and subscription management processes. \"Please note\" is unnecessary filler. \"Feature implementation\" is vague\u2014clarified with \"latest system update\". \"Undergo some alignment\" is unnatural and imprecise\u2014reworded to clearly state that customer workflows may need adjustments. Thanks to our latest system update, we've added some cool new details to your profile (check out our updated guide for more info!). You might notice a few changes in how we handle support and subscriptions \u2013 all for a smoother experience. Casual, engaging tone. Directly addresses the user with \"we've added\" and \"you might notice\" to make the update feel beneficial. To be more precise, a user record is now supplemented by additional properties, which are described in the latest version of our API reference. (Merged into previous sentence for better flow) \"To be more precise\" is redundant here. \"Supplemented by additional properties\" is awkward\u2014reworded for clarity. This sentence is unnecessary as a standalone and is better integrated into the previous one. (Merged into the previous user-facing sentence for better readability.) Removed redundancy and merged into a more natural, flowing explanation. For example, the users can be transferred to the 'idle' state before they confirm purchasing a plan. For example, when a user subscribes to a plan, their status is temporarily updated to 'signing' pending subscription confirmation. \"The users\" should be \"users\" (incorrect article usage). \"Transferred to the 'idle' state\" is incorrect; users actually transition to 'signing' (see the API documentation). \"Before they confirm purchasing\" is awkward\u2014\"pending subscription confirmation\" is smoother. For example, once you subscribe to a plan, your status will change to 'signing' while we finalize everything. Conversational tone using \"once you subscribe\" and \"we finalize everything\" for clarity and engagement. The capacity of plans per provider is unlimited, so feel free to create as many of them as necessary and customize them to up to a desirable extent. Providers can create multiple subscription plans, with each plan's availability governed by user type mappings. These plans can be customized to address specific business requirements. \"The capacity of plans per provider is unlimited\" is misleading; added explanation about user type mappings. \"Feel free\" is too informal for a partner-focused document. \"Customize them to up to a desirable extent\" is unclear and unnatural\u2014simplified for clarity. If you're a provider, you can create as many subscription plans as you need. Each plan is set up for specific user types, and you can easily tweak them to suit your business needs. Uses \"If you're a provider\" for direct user engagement. \"Easily tweak them\" makes customization sound approachable and user-friendly. Despite that, plans - merely surface well-known user attributes complying completely with the corresponding state flaw. Moreover, subscription plans are structured around established user attributes and enforced through role-based access controls (RBAC) to ensure system security. \"Despite that\" is unclear in this context. \"Plans - merely surface well-known user attributes\" is awkward and vague; reworded for clarity. \"Complying completely with the corresponding state flaw\" is confusing\u2014likely intended to refer to RBAC constraints. Plus, our subscription plans are built around familiar user profiles and protected by role-based access controls (RBAC) to keep things secure. Uses \"Plus, our subscription plans\" to sound more approachable. Keeps security emphasis while making it more user-friendly."},{"location":"task3/#revised-version-partner-focused","title":"Revised Version (Partner-Focused)","text":"<p>Subscription plans provide users with a range of service options, each configured with specific parameters.</p> <p>Following our latest system update, user records have been enhanced with additional attributes, as detailed in our updated API documentation. These changes may require adjustments to customer support workflows and subscription management processes.</p> <p>For example, when a user subscribes to a plan, their status is temporarily updated to 'signing' pending subscription confirmation.</p> <p>Providers can create multiple subscription plans, with each plan's availability governed by user type mappings. These plans can be customized to address specific business requirements.</p> <p>Moreover, subscription plans are structured around established user attributes and enforced through role-based access controls (RBAC) to ensure system security.</p>"},{"location":"task3/#revised-version-user-focused","title":"Revised Version (User-Focused)","text":"<p>Discover a variety of subscription plans designed just for you \u2013 each plan comes with its own set of features.</p> <p>Thanks to our latest system update, we've added some cool new details to your profile (check out our updated guide for more info!). You might notice a few changes in how we handle support and subscriptions \u2013 all for a smoother experience.</p> <p>For example, once you subscribe to a plan, your status will change to 'signing' while we finalize everything.</p> <p>If you're a provider, you can create as many subscription plans as you need. Each plan is set up for specific user types, and you can easily tweak them to suit your business needs.</p> <p>Plus, our subscription plans are built around familiar user profiles and protected by role-based access controls (RBAC) to keep things secure.</p>"}]}